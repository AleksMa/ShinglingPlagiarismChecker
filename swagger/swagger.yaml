openapi: '3.0.0'
info:
  title: Source code plagiarism checker
  version: '1.0'

components:
  schemas:
    UserResponse:
      description: The root schema comprises the entire JSON document.
      default: {}
      properties:
        username:
          $id: "#/properties/username"
          type: string
          title: The username schema
          description: An explanation about the purpose of this instance.
          default: ""
          example: Алексей_Мамаев
        fullname:
          $id: "#/properties/fullname"
          type: string
          title: The fullname schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            Алексей_Мамаев
        studentid:
          $id: "#/properties/studentid"
          type: string
          title: The studentid schema
          description: An explanation about the purpose of this instance.
          example:
            "702731134813084759"
    UserRequest:
      description: The root schema comprises the entire JSON document.
      default: {}
      properties:
        fullname:
          $id: "#/properties/fullname"
          type: string
          title: The fullname schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            Алексей_Мамаев
        studentid:
          $id: "#/properties/studentid"
          type: string
          title: The studentid schema
          description: An explanation about the purpose of this instance.
          example:
            "702731134813084759"
    TaskResponse:
      description: The root schema comprises the entire JSON document.
      default: {}
      properties:
        username:
          $id: "#/properties/username"
          type: string
          title: The taskname schema
          description: An explanation about the purpose of this instance.
          default: ""
          example: polinom
        fullname:
          $id: "#/properties/fullname"
          type: string
          title: The fullname schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            Полином
        maxtime:
          $id: "#/properties/maxtime"
          type: integer
          title: The maxtime schema
          description: An explanation about the purpose of this instance.
          example:
            2
        maxmemory:
          $id: "#/properties/maxmemory"
          type: integer
          title: The maxmemory schema
          description: An explanation about the purpose of this instance.
          example:
            256
    TaskRequest:
      description: The root schema comprises the entire JSON document.
      default: {}
      properties:
        fullname:
          $id: "#/properties/fullname"
          type: string
          title: The fullname schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            Полином
        maxtime:
          $id: "#/properties/maxtime"
          type: integer
          title: The maxtime schema
          description: An explanation about the purpose of this instance.
          example:
            2
        maxmemory:
          $id: "#/properties/maxmemory"
          type: integer
          title: The maxmemory schema
          description: An explanation about the purpose of this instance.
          example:
            256
    ResultResponse:
      $schema: http://json-schema.org/draft-07/schema
      $id: http://example.com/example.json
      type: array
      title: The root schema
      description: The root schema comprises the entire JSON document.
      default: []
      items:
        anyOf:
          - $id: "#/items/anyOf/0"
            type: object
            title: The first anyOf schema
            description: An explanation about the purpose of this instance.
            default: {}
            required:
              - user
              - task
              - uploadDate
              - sourceCode
              - status
              - copiedFrom
            properties:
              user:
                $id: "#/items/anyOf/0/properties/user"
                type: string
                title: The user schema
                description: An explanation about the purpose of this instance.
                default: ""
                example: Алексей_Мамаев
              task:
                $id: "#/items/anyOf/0/properties/task"
                type: string
                title: The task schema
                description: An explanation about the purpose of this instance.
                default: ""
                example: frame
              uploadDate:
                $id: "#/items/anyOf/0/properties/uploadDate"
                type: string
                title: The uploadDate schema
                description: An explanation about the purpose of this instance.
                default: ""
                example: "2020-06-21T23:17:57.60531+03:00"
              sourceCode:
                $id: "#/items/anyOf/0/properties/sourceCode"
                type: string
                title: The sourceCode schema
                description: An explanation about the purpose of this instance.
                default: ""
                example: "int main(int argc, char **argv) { "
              copiedFrom:
                type: array
                items:
                  anyOf:
                    - $id: "#/items/anyOf/0/properties/copiedFrom/items/anyOf/0"
                      type: object
                      title: The first anyOf schema
                      description: An explanation about the purpose of this instance.
                      default: {}
                      required:
                        - user
                        - task
                        - uploadDate
                        - percent
                        - sourceCode
                      properties:
                        user:
                          $id: "#/items/anyOf/0/properties/copiedFrom/items/anyOf/\
                                  0/properties/user"
                          type: string
                          title: The user schema
                          description: An explanation about the purpose of this instance.
                          default: ""
                          example: Даниил_Гавриловский
                        task:
                          $id: "#/items/anyOf/0/properties/copiedFrom/items/anyOf/\
                                  0/properties/task"
                          type: string
                          title: The task schema
                          description: An explanation about the purpose of this instance.
                          default: ""
                          example: frame
                        uploadDate:
                          $id: "#/items/anyOf/0/properties/copiedFrom/items/anyOf/\
                                  0/properties/uploadDate"
                          type: string
                          title: The uploadDate schema
                          description: An explanation about the purpose of this instance.
                          default: ""
                          example: "2020-06-21T23:17:57.290795+03:00"
                        percent:
                          $id: "#/items/anyOf/0/properties/copiedFrom/items/anyOf/\
                                  0/properties/percent"
                          type: integer
                          title: The percent schema
                          description: An explanation about the purpose of this instance.
                          default: 0
                          example: 5
                        sourceCode:
                          $id: "#/items/anyOf/0/properties/copiedFrom/items/anyOf/\
                                  0/properties/sourceCode"
                          type: string
                          title: The sourceCode schema
                          description: An explanation about the purpose of this instance.
                          default: ""
                          example: "int main(int argc, char **argv) { "
                  $id: "#/items/anyOf/0/properties/copiedFrom/items"
        $id: "#/items"
    AttemptResponse:
      $schema: http://json-schema.org/draft-07/schema
      $id: http://example.com/example.json
      type: object
      title: The root schema
      description: The root schema comprises the entire JSON document.
      default: {}
      examples:
        - user: Алексей_Мамаев
          task: dfs
          time: 1
          memory: 5
          sourceCode: int main(char argv) { int h = atoi(argv[1]); }
          uploadDate: 2020-07-01T21:30:26.623196+03:00
      required:
        - user
        - task
        - time
        - memory
        - sourceCode
        - uploadDate
      properties:
        user:
          $id: "#/properties/user"
          type: string
          title: The user schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            Алексей_Мамаев
        task:
          $id: "#/properties/task"
          type: string
          title: The task schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            dfs
        time:
          $id: "#/properties/time"
          type: integer
          title: The time schema
          description: An explanation about the purpose of this instance.
          default: 0
          example: 1
        memory:
          $id: "#/properties/memory"
          type: integer
          title: The memory schema
          description: An explanation about the purpose of this instance.
          default: 0
          example: 5
        sourceCode:
          $id: "#/properties/sourceCode"
          type: string
          title: The sourceCode schema
          description: An explanation about the purpose of this instance.
          default: ""
          example: "int main(char argv) { int h = atoi(argv[1]); }"
        uploadDate:
          $id: "#/properties/uploadDate"
          type: string
          title: The uploadDate schema
          description: An explanation about the purpose of this instance.
          default: ""
          example: "2020-07-01T21:30:26.623196+03:00"
    AttemptRequest:
      $schema: http://json-schema.org/draft-07/schema
      $id: http://example.com/example.json
      type: object
      title: The root schema
      description: The root schema comprises the entire JSON document.
      default: {}
      examples:
        - user: Алексей_Мамаев
          task: dfs
          time: 1
          memory: 5
          sourceCode: int main(char argv) { int h = atoi(argv[1]); }
          uploadDate: 2020-07-01T21:30:26.623196+03:00
      required:
        - user
        - task
        - time
        - memory
        - sourceCode
        - uploadDate
      properties:
        user:
          $id: "#/properties/user"
          type: string
          title: The user schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            Алексей_Мамаев
        task:
          $id: "#/properties/task"
          type: string
          title: The task schema
          description: An explanation about the purpose of this instance.
          default: ""
          example:
            dfs
        time:
          $id: "#/properties/time"
          type: integer
          title: The time schema
          description: An explanation about the purpose of this instance.
          default: 0
          example: 1
        memory:
          $id: "#/properties/memory"
          type: integer
          title: The memory schema
          description: An explanation about the purpose of this instance.
          default: 0
          example: 5
        sourceCode:
          $id: "#/properties/sourceCode"
          type: string
          title: The sourceCode schema
          description: An explanation about the purpose of this instance.
          default: ""
          example: "int main(char argv) { int h = atoi(argv[1]); }"

paths:
  /user/{username}:
    get:
      summary: get user info
      tags:
        - user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: user name to be gotten
          style: form
          explode: false
          allowReserved: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    post:
      summary: add user
      tags:
        - user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: user name to be gotten
          style: form
          explode: false
          allowReserved: true
      requestBody:
        description: Full name and student ID of user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      summary: update user
      tags:
        - user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: user name of changing user
          style: form
          explode: false
          allowReserved: true
      requestBody:
        description: New full name and student ID of user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      summary: delete user
      tags:
        - user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: user name to be deleted
          style: form
          explode: false
          allowReserved: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /task/{taskname}:
    get:
      summary: get task info
      tags:
        - task
      parameters:
        - in: path
          name: taskname
          required: true
          schema:
            type: string
          description: task name to be gotten
          style: form
          explode: false
          allowReserved: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
    post:
      summary: add task
      tags:
        - task
      parameters:
        - in: path
          name: taskname
          required: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: true
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
    put:
      summary: update task
      tags:
        - task
      parameters:
        - in: path
          name: taskname
          required: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: true
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
    delete:
      summary: delete task
      tags:
        - task
      parameters:
        - in: path
          name: taskname
          required: true
          schema:
            type: string
          description: task name to be deleted
          style: form
          explode: false
          allowReserved: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'

  /attempt:
    get:
      summary: get attempt info
      tags:
        - attempt
      parameters:
        - in: query
          name: user
          schema:
            type: string
          required: false
          description: user name
          style: form
          explode: false
        - in: query
          name: task
          schema:
            type: string
          required: false
          description: task name
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptResponse'
    post:
      summary: add attempt
      tags:
        - attempt
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttemptRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptResponse'

  /result:
    get:
      summary: get results by user, task
      tags:
        - result
      parameters:
        - in: query
          name: user
          schema:
            type: string
          required: false
          description: user name
          style: form
          explode: false
        - in: query
          name: task
          schema:
            type: string
          required: false
          description: task name
          style: form
          explode: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponse'
